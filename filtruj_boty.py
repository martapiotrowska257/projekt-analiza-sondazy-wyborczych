import pandas as pd
import os
import glob


# === A) Wczytywanie i Å‚Ä…czenie danych Bluesky ===

def read_all_csv_from_folder(folder_path):
    all_files = glob.glob(os.path.join(folder_path, "*.csv"))
    dfs = []
    # Lista nazw plikÃ³w, ktÃ³re majÄ… byÄ‡ ignorowane podczas wczytywania
    # Dodajemy zarÃ³wno CSV, jak i XLSX, aby uniknÄ…Ä‡ problemÃ³w
    files_to_ignore = ["przefiltrowany_bluesky.csv", "przefiltrowany_bluesky.xlsx"]

    for file_path in all_files:
        file_name = os.path.basename(file_path)  # Pobieramy tylko nazwÄ™ pliku
        if file_name not in files_to_ignore:
            dfs.append(pd.read_csv(file_path, encoding='utf-8'))

    if not dfs:  # Sprawdzamy, czy lista dfs nie jest pusta
        print(
            f"Brak oryginalnych plikÃ³w CSV do wczytania w folderze: {folder_path}. SprawdÅº, czy sÄ… tam pliki inne niÅ¼ 'przefiltrowany_bluesky.csv'/'przefiltrowany_bluesky.xlsx'.")
        return pd.DataFrame()  # Zwracamy pustÄ… ramkÄ™ danych

    return pd.concat(dfs, ignore_index=True)


bluesky_df = read_all_csv_from_folder("bluesky")

# Sprawdzenie, czy w ogÃ³le coÅ› wczytano
if bluesky_df.empty:
    print("Brak danych do przetworzenia po wczytaniu. Skrypt zakoÅ„czy dziaÅ‚anie.")
    exit()  # ZakoÅ„cz dziaÅ‚anie skryptu, jeÅ›li nie ma danych

# === B) Wykrywanie podejrzanych autorÃ³w ===

# Zliczamy liczbÄ™ postÃ³w dla kaÅ¼dego autora
author_counts = bluesky_df["Autor"].value_counts()

# Uznajemy za podejrzanych tych, ktÃ³rzy majÄ… np. >50 postÃ³w
threshold = 40
suspected_bots = author_counts[author_counts > threshold].index

# Filtrowanie â€“ usuwamy posty od podejrzanych autorÃ³w
# TUTAJ UPEWNIAMY SIÄ˜, Å»E FILTRUJEMY ORYGINALNÄ„ RAMKÄ˜ DANYCH (bluesky_df)
filtered_bluesky_df = bluesky_df[~bluesky_df["Autor"].isin(suspected_bots)]

# === C) Zapisujemy nowy przefiltrowany plik CSV i XLSX ===

# Upewnij siÄ™, Å¼e folder "bluesky" istnieje
if not os.path.exists("bluesky"):
    os.makedirs("bluesky")

# Zapis do CSV
filtered_csv_path = os.path.join("bluesky", "przefiltrowany_bluesky.csv")
filtered_bluesky_df.to_csv(filtered_csv_path, index=False)

# Zapis do XLSX
filtered_xlsx_path = os.path.join("bluesky", "przefiltrowany_bluesky.xlsx")
filtered_bluesky_df.to_excel(filtered_xlsx_path, index=False)

# Opcjonalnie â€“ komunikaty pomocnicze
print(f"ğŸ§¹ UsuniÄ™to {len(suspected_bots)} podejrzanych autorÃ³w (z wiÄ™cej niÅ¼ {threshold} postami).")
print(f"âœ… PozostaÅ‚o {len(filtered_bluesky_df)} postÃ³w po filtracji.")
print(f"Plik CSV zostaÅ‚ zapisany pod Å›cieÅ¼kÄ…: {filtered_csv_path}")
print(f"Plik XLSX zostaÅ‚ zapisany pod Å›cieÅ¼kÄ…: {filtered_xlsx_path}")